spring:
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true 
        - name: LoggingFilter
          args:
            baseMessage: Spring Cloud Gateway LoggingFilter
            preLogger: true
            postLogger: true 
      routes:
#        - id: first-service
#          uri: lb://FIRST-SERVICE
#          predicates:
#            - Path=/first-service/**
#                  
#        - id: second-service
#          uri: lb://SECOND-SERVICE
#          predicates:
#            - Path=/second-service/**
            
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth-service/**
          filters:
            - name : CustomFilter 
            - RemoveRequestHeader=Cookie #POST로 동작되는값은 Header를 모두 삭제시키고 POST로 전달되는 값은 새로운 데이터처럼 인식시키기 위해서 RequestHeader를 초기화.
            - RewritePath=/user-service/(?<segement>.*), /$\{segement}
        
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/**
#          filters:
#            - name : CustomFilter  
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie #POST로 동작되는값은 Header를 모두 삭제시키고 POST로 전달되는 값은 새로운 데이터처럼 인식시키기 위해서 RequestHeader를 초기화.
            - RewritePath=/user-service/(?<segement>.*), /$\{segement}
            
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie #POST로 동작되는값은 Header를 모두 삭제시키고 POST로 전달되는 값은 새로운 데이터처럼 인식시키기 위해서 RequestHeader를 초기화.
            - RewritePath=/user-service/(?<segement>.*), /$\{segement}
        
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie #POST로 동작되는값은 Header를 모두 삭제시키고 POST로 전달되는 값은 새로운 데이터처럼 인식시키기 위해서 RequestHeader를 초기화.
            - RewritePath=/user-service/(?<segement>.*), /$\{segement}
        
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie #새로운 데이터처럼 인식시키기 위해서 RequestHeader를 초기화.
            - RewritePath=/user-service/(?<segement>.*), /$\{segement}
            - AuthorizationHeaderFilter

#spring actuator에서 사용할 정보  
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace